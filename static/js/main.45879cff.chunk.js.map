{"version":3,"sources":["components/BarChart/Chart/Chart.js","components/BarChart/BarChart.js","utils/initialData.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Chart","dataForChart","useState","height","backgroundColor","styleOnChart","setStyleOnChart","color","styleOnValue","setStyleOnValue","useEffect","value","className","style","BarChart","data","styleOnBarChart","setStyleOnBarChart","maxValue","reduce","acc","curr","map","i","initialDataFirst","initialDataSecond","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAGaA,EAAQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,EAAwCC,mBAAS,CAC/CC,OAAO,MACPC,gBAAgB,UAFlB,mBAAOC,EAAP,KAAqBC,EAArB,KAIA,EAAwCJ,mBAAS,CAC/CK,MAAM,UADR,mBAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAZAC,qBAAU,WACJT,IACFK,EAAgB,CACdH,OAAO,GAAD,OAAKF,EAAaU,MAAlB,MACNP,gBAAgB,GAAD,OAAKH,EAAaM,SAEnCE,EAAgB,CACdF,MAAM,GAAD,OAAKN,EAAaM,YAG1B,CAACN,IAGF,0BAASW,UAAU,QAAnB,UACE,oBAAIC,MAAOL,EAAcI,UAAU,eAAnC,SACGX,EAAaU,QAEhB,qBAAKE,MAAOR,EAAcO,UAAU,sBCzB7BE,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,EAA8Cb,mBAAS,CACrDC,OAAO,QADT,mBAAOa,EAAP,KAAwBC,EAAxB,KAeA,OAXAP,qBAAU,WACR,GAAIK,EAAM,CACR,IAAMG,EAAWH,EAAKI,QAAO,SAACC,EAAKC,GAAN,OAC3BD,EAAIT,MAAQU,EAAKV,MAAQS,EAAMC,KAC/BV,MACFM,EAAmB,CACjBd,OAAO,GAAD,OAAKe,EAAW,GAAhB,WAGT,CAACH,IAGF,yBAASF,MAAOG,EAAiBJ,UAAU,YAA3C,SACGG,EAAKO,KAAI,SAACrB,EAAcsB,GAAf,OACR,cAAC,EAAD,CAAetB,aAAcA,GAAjBsB,SCvBPC,EAAmB,CAC9B,CAAEb,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,GAAIJ,MAAO,WACpB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,EAAGJ,MAAO,WACnB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,IAAKJ,MAAO,YAGVkB,EAAoB,CAC/B,CAAEd,MAAO,GAAIJ,MAAO,WACpB,CAAEI,MAAO,GAAIJ,MAAO,WACpB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,IAAKJ,MAAO,WACrB,CAAEI,MAAO,GAAIJ,MAAO,YCJPmB,MAXf,WACE,OACE,yBAASd,UAAU,MAAnB,SACE,sBAAKA,UAAU,6BAAf,UACE,cAAC,EAAD,CAAUG,KAAMS,IAChB,cAAC,EAAD,CAAUT,KAAMU,UCGTE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.45879cff.chunk.js","sourcesContent":["import './Chart.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const Chart = ({ dataForChart }) => {\r\n  const [styleOnChart, setStyleOnChart] = useState({\r\n    height: `0px`,\r\n    backgroundColor: `black`,\r\n  });\r\n  const [styleOnValue, setStyleOnValue] = useState({\r\n    color: `black`,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataForChart) {\r\n      setStyleOnChart({\r\n        height: `${dataForChart.value}px`,\r\n        backgroundColor: `${dataForChart.color}`,\r\n      });\r\n      setStyleOnValue({\r\n        color: `${dataForChart.color}`,\r\n      });\r\n    }\r\n  }, [dataForChart]);\r\n\r\n  return (\r\n    <section className=\"chart\">\r\n      <h2 style={styleOnValue} className=\"chart__value\">\r\n        {dataForChart.value}\r\n      </h2>\r\n      <div style={styleOnChart} className=\"chart__column\" />\r\n    </section>\r\n  );\r\n};\r\n","import './BarChart.css';\r\nimport { Chart } from './Chart/Chart';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const BarChart = ({ data }) => {\r\n  const [styleOnBarChart, setStyleOnBarChart] = useState({\r\n    height: `0px`,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const maxValue = data.reduce((acc, curr) =>\r\n        acc.value > curr.value ? acc : curr\r\n      ).value;\r\n      setStyleOnBarChart({\r\n        height: `${maxValue + 40}px`,\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <section style={styleOnBarChart} className=\"bar-chart\">\r\n      {data.map((dataForChart, i) => (\r\n        <Chart key={i} dataForChart={dataForChart} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n","export const initialDataFirst = [\r\n  { value: 371, color: '#FF1493' },\r\n  { value: 127, color: '#FFA500' },\r\n  { value: 66, color: '#FFA07A' },\r\n  { value: 168, color: '#808000' },\r\n  { value: 257, color: '#008080' },\r\n  { value: 9, color: '#F2484C' },\r\n  { value: 367, color: '#5F9EA0' },\r\n  { value: 407, color: '#EEE8AA' },\r\n  { value: 111, color: '#6A5ACD' },\r\n  { value: 159, color: '#F2484C' },\r\n];\r\n\r\nexport const initialDataSecond = [\r\n  { value: 34, color: '#FFB6C1' },\r\n  { value: 69, color: '#9370DB' },\r\n  { value: 109, color: '#FF6347' },\r\n  { value: 300, color: '#6495ED' },\r\n  { value: 144, color: '#2F4F4F' },\r\n  { value: 79, color: '#808080' },\r\n];\r\n","import './App.css';\nimport { BarChart } from '../BarChart/BarChart';\nimport { initialDataFirst, initialDataSecond } from '../../utils/initialData';\n\nfunction App() {\n  return (\n    <section className=\"app\">\n      <div className=\"app__conditional-container\">\n        <BarChart data={initialDataFirst} />\n        <BarChart data={initialDataSecond} />\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}